#!/usr/bin/bash
echo ' ________________'
echo '< find some file >'
echo ' ----------------'
echo '        \   ^__^'
echo '        \  (oo)\_______'
echo '           (__)\       )\/\'
echo '               ||----w |'
echo '               ||     ||'



# 定义脚本的使用方式
usage() {
        echo "作用:自动提取文件中存在的敏感信息"
        echo ""
        echo "Usage(使用方法): $0 -l <directory_path>"
        echo "参考了findsomething中的正则"
    exit 1
}

# 检查参数
if [[ "$#" -ne 2 || "$1" != "-l" ]]; then
    usage
fi

file="$2"

# 检查文件夹是否存在
if [[ ! -d "$file" ]]; then
    echo "Error: The specified directory does not exist: $file"
    exit 1
fi


clear

echo "------------url---------------"
url=$(find $file -type f -exec grep -oP '\bhttps?://\S+\b' {} + | sort -u )
#| grep -vE 'qq\.|\.org|\.qq|\.weixin|weixin\.')
echo "$url" | sort -u 


echo "--------------domain---------"
domain=$(echo "$url" | awk -F'://' '{print $2}' | awk -F'/' '{print $1}')
echo "$domain" |sort -u

echo "------------IP---------------"
ip() {
find $file -type f -exec grep -oP '(127\.0\.0\.1|localhost|10\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}|172\.(1[6-9]|2[0-9]|3[01])\.[0-9]{1,3}\.[0-9]{1,3}|192\.168\.[0-9]{1,3}\.[0-9]{1,3})' {} +
find $file -type f -exec grep -E "'\"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\"|\'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\'" {} +
find $file -type f -exec grep -E "'\"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:\d{1,5}\"|\'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:\d{1,5}\'" {} +
}
ip |sort -u

echo -e "\n \n"

echo "================API====================="
#将变量中的值存放到临时文件中
touch /tmp/.api_var
echo "$file" > /tmp/.api_var

echo "------------api in url---------------"
find $file -type f -exec grep -oP 'https?://\S+' {} + | grep -i 'api' | sort -u 

#使用python脚本

python3 find_apipath.py > apipath.txt
cat apipath.txt |sort -u|grep -v -e '\.json' -e '\.wxml'|grep -v '^https'|grep -v '^http' > apipath.txt
cat apipath.txt
rm /tmp/.api_var


echo -e "\n \n"
echo "-----------Js---------------"
find $file -name "*.js" -type f

echo "------------json--------------"
find $file -name "*.json" -type f |sort -u |grep -v "miniprogram_npm"

echo "-------------config---------------"
find $file -type f -name "*config*"

echo -e "\n \n \n"
echo "----------身份证--------------"
find $file -type f -exec grep -oP '\b[1-9]\d{5}(18|19|20)\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])\d{3}[\dXx]\b' {} + | sort -u 

echo "------------疑似手机号？phone---------------"
find $file -type f -exec grep -oP '\b\d{11}\b' {} + | sort -u 

echo "------------邮箱---------------"
find $file -type f -exec grep -oEh '\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}\b' {} + | sort -u


echo -e "\n \n \n"
echo "-----------小程序敏感信息提取----------------"
echo "-------疑似acesstoken----"
aktoken() {
find $file -type f -exec grep -E 'access.*?key.*?=|access.*?key.*?:|token.*?key.*?=|token.*?key.*?:' {} + |sort -u
find $file -type f -exec grep -E 'access_key|access_token|client_secret' {} + |sort -u
}
aktoken |sort -u


#关键字匹配
secret() {
find $file -type f -exec grep -E '\b((Ac[Kk]eyS[Ee]cret)|(Ac[Kk]ey[Ii][Dd])|(A[Cc]cess_[Kk]ey)|(A[Cc]cess_[Ss]ecret)|(A[Cc]cess_[Ii][Dd])|(S[Ss]ecret_[Kk]ey))\b' {} +
find $file -type f -exec grep -iE '[*]secret[id|key].*?=|secret[id|key].*?:".*?"' {} +
find $file -type f -exec grep -iE 'secret[id|key].*?=|secret[id|key].*?:".*?"' {} +
find $file -type f -exec grep -iE 'secret(id|key).*?=.*?".*?"|secret(id|key).*?:.*?".*?"' {} +
find $file -type f -exec grep -iE 'appsecret|app_secret' {} +
}
secret=$(secret)
echo "$secret" | sort -u


echo -e "\n"
echo "--------corpid--------------"
# 搜索并输出包含特定字符串的文件列表
find_corpid() {
        find $file -type f -exec grep -iE '(wechatSecretKey|wechatAppId|corpid|SecretKey|Secretid|AppId)' {} + | sort -u

}

# 调用函数获取结果，并存入变量
corpid=$(find_corpid)

# 输出结果
echo "$corpid"


echo -e "\n"
echo -e "\n"
searchkey() {
    echo "----------------Checking for Possible AccessKeyId & AccessSecretkey----------------"

    # Search for AccessKeyId
    search_access_key_id() {
        local directory="$1"
        find "$directory" -type f -exec perl -0777 -ne '
            BEGIN { print "---Files matching AccessKeyId---\n" }
            if (/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{24}$/) {
                print "File: $ARGV Matched AccessKeyId!!!\n";
                exit 0; # Exit after finding a match to avoid processing more files
            }
        ' {} +
    }

    # Check if string matches AccessKeySecret regex
    check_access_key_secret() {
        local string="$1"
        echo "$string" | awk 'length($0) == 30 &&
            match($0, /[A-Z]/) &&
            match($0, /[a-z]/) &&
            match($0, /[0-9]/) {
                print
            }'
    }

    # Call functions and print results
    search_access_key_id "$file"

    # Suppose there is an AccessKeySecret string to check here
    access_key_secret="YourAccessKeySecretStringToCheck"
    access_key_secret_result=$(check_access_key_secret "$access_key_secret")


    if [ -n "$access_key_secret_result" ]; then
        echo "$access_key_secret_result matched AccessKeySecret regex"
    fi

 
    search_dir="$file"

    # Amazon Web Services
    echo "Searching for Amazon Web Services keys..."
    aws_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AKIA[A-Za-z0-9]{16}$')
    if [ -n "$aws_keys" ]; then
        echo "$aws_keys" | while IFS= read -r file; do
            echo "Suspected Amazon Web Services key found in: $file"
        done
    fi

    # Google Cloud Platform
    echo "Searching for Google Cloud Platform keys..."
    google_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^GOOG[\w\W]{10,30}$')
    if [ -n "$google_keys" ]; then
        echo "$google_keys" | while IFS= read -r file; do
            echo "Suspected Google Cloud Platform key found in: $file"
        done
    fi

    # Microsoft Azure
    echo "Searching for Microsoft Azure keys..."
    azure_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AZ[A-Za-z0-9]{34,40}$')
    if [ -n "$azure_keys" ]; then
        echo "$azure_keys" | while IFS= read -r file; do
            echo "Suspected Microsoft Azure key found in: $file"
        done
    fi

    # IBM Cloud
    echo "Searching for IBM Cloud keys..."
    ibm_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^IBM[A-Za-z0-9]{10,40}$')
    if [ -n "$ibm_keys" ]; then
        echo "$ibm_keys" | while IFS= read -r file; do
            echo "Suspected IBM Cloud key found in: $file"
        done
    fi

    # Oracle Cloud
    echo "Searching for Oracle Cloud keys..."
    oracle_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^OCID[A-Za-z0-9]{10,40}$')
    if [ -n "$oracle_keys" ]; then
        echo "$oracle_keys" | while IFS= read -r file; do
            echo "Suspected Oracle Cloud key found in: $file"
        done
    fi

    # Alibaba Cloud
    echo "Searching for Alibaba Cloud keys..."
    alibaba_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^LTAI[A-Za-z0-9]{12,20}$')
    if [ -n "$alibaba_keys" ]; then
        echo "$alibaba_keys" | while IFS= read -r file; do
            echo "Suspected Alibaba Cloud key found in: $file"
        done
    fi

    # Tencent Cloud
    echo "Searching for Tencent Cloud keys..."
    tencent_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AKID[A-Za-z0-9]{13,20}$')
    if [ -n "$tencent_keys" ]; then
        echo "$tencent_keys" | while IFS= read -r file; do
            echo "Suspected Tencent Cloud key found in: $file"
        done
    fi

    # Huawei Cloud
    echo "Searching for Huawei Cloud keys..."
    huawei_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AK[\w\W]{10,62}$')
    if [ -n "$huawei_keys" ]; then
        echo "$huawei_keys" | while IFS= read -r file; do
            echo "Suspected Huawei Cloud key found in: $file"
        done
    fi

    # Baidu Cloud
    echo "Searching for Baidu Cloud keys..."
    baidu_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AK[A-Za-z0-9]{10,40}$')
    if [ -n "$baidu_keys" ]; then
        echo "$baidu_keys" | while IFS= read -r file; do
            echo "Suspected Baidu Cloud key found in: $file"
        done
    fi

    # JD Cloud
    echo "Searching for JD Cloud keys..."
    jd_keys=$(find "$search_dir" -type f -print0 | xargs -0 grep -E '^AK[A-Za-z0-9]{10,40}$')
    if [ -n "$jd_keys" ]; then
        echo "$jd_keys" | while IFS= read -r file; do
            echo "Suspected JD Cloud key found in: $file"
        done
    fi
}

# Execute the searchkey function, sort unique results, suppress sha512 output, and clean up
searchkey | sort -u > .ak
cat .ak | grep -v "sha512"
rm .ak


     #关键词搜索
     echo -e "\033[32m======关键词搜索======\033[0m"
#find $file -type f -exec grep -n -iE "access_key|accesskey|accessKeySecret|secret" {} + | awk -F: '{print "搜索到内容: \033[31m" $3 "\033[0m, 所在行数为: \033[31m" $2 "\033[0m, 所在文件位置: \033[31m" $1 "\033[0m"}'

find $file -type f -exec grep -n -iE "access_key_id|access_key_Secret|access_key|accesskey|accessKeySecret|secret" {} + 



echo -e "\n"
echo -e "\n"
echo -e "\n"
echo "----------hash提取(16位/32位)--------"
# 假设 $file 是一个目录路径  
hashlist=()  
  
# 使用 find 命令递归地查找 $file 目录下的所有文件，并逐行读取内容  
while IFS= read -r file; do  
    # 只处理普通文件  
    if [[ -f "$file" ]]; then  
        while IFS= read -r line; do  
            # 检查字符串长度是否为 16 或 32  
            if [[ ${#line} -eq 16 || ${#line} -eq 32 ]]; then  
                # 使用正则表达式检查字符串是否只包含小写字母和数字  
                if [[ $line =~ ^[a-z0-9]+$ ]]; then  
                    # 将字符串添加到 hashlist 数组中，使用关联数组自动去重  
                    declare -A unique_hashes  
                    unique_hashes["$line"]=1  
                fi  
            fi  
        done < "$file"  
    fi  
done < <(find "$file" -type f)  
  
# 获取去重后的哈希值列表  
hashes=()  
for hash in "${!unique_hashes[@]}"; do  
    hashes+=("$hash")  
done  
  
# 如果找到至少一个哈希值，则输出到 hash.txt 文件  
#if [[ ${#hashes[@]} -gt 0 ]]; then  
    # 确保 hash.txt 文件在正确的目录下，这里假设在当前目录  
   # hashfile="hash.txt"  
  
    # 将去重后的哈希值列表写入 hash.txt 文件  
   # printf '%s\n' "${hashes[@]}" > "$hashfile"  
#fi  
  
# 如果需要，打印出找到的哈希值（可选）  
if [[ ${#hashes[@]} -gt 0 ]]; then  
    echo "Found hashes:"  
    for hash in "${hashes[@]}"; do  
        echo "$hash"| grep -v "sha512"
    done  

fi

#sha512
echo "======find sha512======"
#find $file -type f -exec grep -iE "sha512" {} + |sort -u 


echo ' ________________'
echo '< find some file Over!>'
echo ' ----------------'
echo '        \   ^__^'
echo '        \  (oo)\_______'
echo '           (__)\       )\/\'
echo '               ||----w |'
echo '               ||     ||'
